#!/bin/bash

# Function to check if command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Initialize variables
report=""
errors=""

# Function to get subscription manager info
get_subscription_info() {
    if command_exists subscription-manager; then
        # Extracting environment name from subscription-manager identity
        environment_name=$(subscription-manager identity | grep 'environment' | awk -F': ' '{print $2}')
        
        # Extracting Capsule Server from subscription-manager config --list output
        capsule_server=$(subscription-manager config --list | grep -E 'baseurl\s+=|hostname\s+=' | awk -F'= ' '{print $2}')
        
        # Extracting Enabled Repositories and Subscription Manager Errors
        enabled_repos=$(subscription-manager repos --list-enabled | awk '/Repo ID:/{print $3}')
        sm_errors=$(subscription-manager status | grep 'Overall Status:' | awk '{print $3}')
        
        # Compile subscription info
        report+="\nSubscription Info:\n"
        report+="--------------------\n"
        report+="Environment Name: $environment_name\n"
        report+="Capsule Server: $capsule_server\n"
        report+="Enabled Repositories: $enabled_repos\n"
        report+="Subscription Manager Errors: $sm_errors\n"
    else
        errors+="\nError: subscription-manager command not found.\n"
    fi
}

# Checking for pending updates
pending_updates=$(yum updateinfo list security 2>&1 | grep RHSA | wc -l)
critical_updates=$(yum updateinfo list security 2>&1 | grep 'Critical/Sec' | awk '{print $3 " " $2}')

# Checking for uptime, kernel version
if command_exists uptime; then
    uptime_info=$(uptime -p 2>/dev/null || uptime | awk -F', load average' '{print $1}')
else
    errors+="\nError: uptime command not found.\n"
fi

kernel_version=$(uname -r 2>&1)

# Checking yum history for update transactions
yum_history_header=$(yum history | head -3)
yum_history_updates=$(yum history | grep 'Update')

# Compile server info
report+="\nServer Report\n"
report+="======================\n"
report+="Uptime: $uptime_info\n"
report+="Kernel Version: $kernel_version\n"
report+="Pending Security Updates: $pending_updates\n"
report+="Critical Security Updates: $critical_updates\n"

# Compile yum history info
report+="\nYUM History (Updates):\n"
report+="--------------------\n"
report+="$yum_history_header\n$yum_history_updates\n"

# Get subscription info if requested
if [[ $1 == "--subscription-info" ]]; then
    get_subscription_info
fi

# Output report
echo -e "$report"

# Output errors, if any
if [[ -n $errors ]]; then
    echo -e "\nErrors:\n======================$errors"
fi