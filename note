#!/bin/bash

LOGFILE=~/script_log.txt
PID=$$
EXECUTION_PATH=$(pwd)

# Function to log exit reasons
on_exit() {
    REASON=$?
    if [[ $REASON == 0 ]]; then
        echo "Script ENDED normally at $(date)" | tee -a "$LOGFILE"
    elif [[ $REASON == 137 ]]; then 
        echo "Script was KILLED externally at $(date)" | tee -a "$LOGFILE"
    else
        echo "Script ENDED abnormally with exit code $REASON at $(date)" | tee -a "$LOGFILE"
    fi
}

# Trapping various signals and exit for logging
trap on_exit EXIT HUP INT QUIT TERM

# Loop that logs a message continuously in the background
{
    while true
    do
        echo "Script is still running at $(date) with PID $PID, Executed from: $EXECUTION_PATH" | tee -a "$LOGFILE"
        sleep 1 
    done
} &

# Capturing the background loop's PID
LOOP_PID=$!

# Auto kill logic (will execute in the background)
{
    sleep 300
    kill -9 $PID
    kill -9 $LOOP_PID
} &

# Capturing the auto-kill's PID
AUTO_KILL_PID=$!

# Logging the PIDs
echo "Script STARTED. PID: $PID, Logging loop PID: $LOOP_PID, Auto-kill PID: $AUTO_KILL_PID, Executed from: $EXECUTION_PATH at $(date)" | tee -a "$LOGFILE"

# Infinite loop to keep the main script running
while true
do
    sleep 10
done